/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 15:20:08 GMT 2024
 */

package com.myapplication.projetopoo2324;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.myapplication.projetopoo2324.ControllerTempo;
import com.myapplication.projetopoo2324.Estado;
import com.myapplication.projetopoo2324.Menu;
import java.time.LocalDate;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ControllerTempo_ESTest extends ControllerTempo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Scanner scanner0 = new Scanner("gpPO");
      Menu.input = scanner0;
      LocalDate localDate0 = MockLocalDate.of(3, 3, 3);
      ControllerTempo.dataValida((String) null, localDate0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Scanner scanner0 = new Scanner("gpPO");
      Menu.input = scanner0;
      Estado estado0 = new Estado();
      LocalDate localDate0 = estado0.getTempoAtual();
      ControllerTempo.dataValida((String) null, localDate0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Scanner scanner0 = new Scanner("--Transportadora removida com successo!--\n");
      Menu.input = scanner0;
      ControllerTempo.dataConverter("Data avancou 1 dia. \n");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ControllerTempo.run((Estado) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Scanner scanner0 = new Scanner("gpPO");
      scanner0.close();
      Menu.input = scanner0;
      Estado estado0 = new Estado();
      // Undeclared exception!
      try { 
        ControllerTempo.run(estado0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Scanner scanner0 = new Scanner("gpPO");
      Menu.input = scanner0;
      // Undeclared exception!
      try { 
        ControllerTempo.dataValida((String) null, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.chrono.ChronoLocalDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Scanner scanner0 = new Scanner("gpPO");
      scanner0.close();
      Menu.input = scanner0;
      // Undeclared exception!
      try { 
        ControllerTempo.dataValida("gpPO", (LocalDate) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Menu.input = null;
      // Undeclared exception!
      try { 
        ControllerTempo.dataConverter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Scanner scanner0 = new Scanner("gpPO");
      scanner0.close();
      Menu.input = scanner0;
      // Undeclared exception!
      try { 
        ControllerTempo.dataConverter("-@$4DzbMZ{OeB");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        ControllerTempo.dataConverter("Data avancou 1 dia. \n");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Estado estado0 = new Estado();
      // Undeclared exception!
      try { 
        ControllerTempo.run(estado0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        ControllerTempo.dataValida("Windows", (LocalDate) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ControllerTempo controllerTempo0 = new ControllerTempo();
  }
}
