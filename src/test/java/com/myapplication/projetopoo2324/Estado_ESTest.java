/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 15:21:15 GMT 2024
 */

package com.myapplication.projetopoo2324;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.myapplication.projetopoo2324.Estado;
import com.myapplication.projetopoo2324.atividade.Atividade;
import com.myapplication.projetopoo2324.planodetreino.PlanoDeTreino;
import com.myapplication.projetopoo2324.utilizador.TipoUtilizador;
import com.myapplication.projetopoo2324.utilizador.Utilizador;
import com.myapplication.projetopoo2324.utilizador.Utilizadores;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.StreamCorruptedException;
import java.time.LocalDate;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Estado_ESTest extends Estado_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Estado estado0 = new Estado();
      FileSystemHandling.shouldAllThrowIOExceptions();
      estado0.escreverLog("3K?(EHt`lD9gKLo");
      assertEquals(1, estado0.getNewUserCode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Estado estado0 = new Estado();
      TipoUtilizador tipoUtilizador0 = TipoUtilizador.PROFISSIONAL;
      Utilizador utilizador0 = new Utilizador("nlG<mur6U_[;[?Gt$", "o%3mUdu@", "", 0.0, tipoUtilizador0);
      estado0.addUtilizador(utilizador0);
      estado0.addUtilizador("");
      assertEquals(2, estado0.getNewUserCode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Estado estado0 = new Estado();
      TipoUtilizador tipoUtilizador0 = TipoUtilizador.PRATICANTE_OCASIONAL;
      Utilizador utilizador0 = new Utilizador("", "Bg", "", 0.0, tipoUtilizador0);
      estado0.addUtilizador(utilizador0);
      Utilizador utilizador1 = estado0.getUtilizadorByEmail("");
      assertEquals(0.0, utilizador1.getFCM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Estado estado0 = new Estado();
      TipoUtilizador tipoUtilizador0 = TipoUtilizador.PROFISSIONAL;
      Utilizador utilizador0 = new Utilizador("z_)Oqkgz!?bQ4|HF", "z_)Oqkgz!?bQ4|HF", (String) null, 1.0, tipoUtilizador0);
      utilizador0.setEmail("Ocorreu um erro ao escrever a string no arquivo.");
      estado0.addUtilizador(utilizador0);
      Utilizador utilizador1 = estado0.getUtilizadorByEmail("Ocorreu um erro ao escrever a string no arquivo.");
      assertEquals("z_)Oqkgz!?bQ4|HF", utilizador1.getNome());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Estado estado0 = new Estado();
      TipoUtilizador tipoUtilizador0 = TipoUtilizador.PROFISSIONAL;
      Utilizador utilizador0 = new Utilizador("z_)Oqkgz!?bQ4|HF", "z_)Oqkgz!?bQ4|HF", (String) null, 1.0, tipoUtilizador0);
      estado0.addUtilizador(utilizador0);
      String string0 = estado0.getUserNameByKey((String) null);
      assertEquals("z_)Oqkgz!?bQ4|HF", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Estado estado0 = new Estado();
      Utilizador utilizador0 = new Utilizador();
      estado0.addUtilizador(utilizador0);
      String string0 = estado0.getUserNameByKey("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Estado estado0 = new Estado();
      Utilizador utilizador0 = new Utilizador();
      estado0.setUserLogged(utilizador0);
      Utilizador utilizador1 = estado0.getUserLogged();
      assertEquals("", utilizador1.getEmail());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Estado estado0 = new Estado();
      TipoUtilizador tipoUtilizador0 = TipoUtilizador.PRATICANTE_OCASIONAL;
      Utilizador utilizador0 = new Utilizador("", "Bg", "", 1387.44373, tipoUtilizador0);
      List<PlanoDeTreino> list0 = utilizador0.getPlanosDeTreino();
      LinkedList<Atividade> linkedList0 = new LinkedList<Atividade>();
      Utilizador utilizador1 = new Utilizador("logs/logs.txt", "PRATICANTE_OCASIONAL", "logs/logs.txt", (-13.444914197154251), tipoUtilizador0, list0, linkedList0);
      estado0.addUtilizador(utilizador1);
      estado0.login("logs/logs.txt");
      Utilizador utilizador2 = estado0.getUserLogged();
      assertEquals("logs/logs.txt", utilizador2.getEmail());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Estado estado0 = new Estado();
      estado0.setTempoAtual((LocalDate) null);
      LocalDate localDate0 = estado0.getTempoAtual();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Estado estado0 = new Estado();
      estado0.setListaDeUtilizadores((Utilizadores) null);
      Utilizadores utilizadores0 = estado0.getListaDeUtilizadores();
      assertNull(utilizadores0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Estado estado0 = new Estado();
      TipoUtilizador tipoUtilizador0 = TipoUtilizador.PROFISSIONAL;
      Utilizador utilizador0 = new Utilizador("nlG<mur6U_[;[?Gt$", "o%3mUdu@", "", 0.0, tipoUtilizador0);
      estado0.addUtilizador(utilizador0);
      Utilizadores utilizadores0 = estado0.getListaDeUtilizadores();
      assertEquals(1, utilizadores0.sizeUtilizadores());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Estado estado0 = new Estado();
      Utilizador utilizador0 = new Utilizador();
      estado0.addUtilizador(utilizador0);
      boolean boolean0 = estado0.existeEmail("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Estado estado0 = new Estado();
      estado0.setListaDeUtilizadores((Utilizadores) null);
      // Undeclared exception!
      try { 
        estado0.login("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.Estado", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Estado estado0 = new Estado();
      // Undeclared exception!
      try { 
        estado0.guardarEstado((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Estado estado0 = new Estado();
      try { 
        estado0.guardarEstado("<fdrzsc");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error in writing to file
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Estado estado0 = new Estado();
      estado0.setListaDeUtilizadores((Utilizadores) null);
      // Undeclared exception!
      try { 
        estado0.getUtilizadorByEmail(")xdC37+I^3*z(,@bJL5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.Estado", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Estado estado0 = new Estado();
      estado0.setListaDeUtilizadores((Utilizadores) null);
      // Undeclared exception!
      try { 
        estado0.getNewUserCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.Estado", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Estado estado0 = new Estado();
      estado0.setListaDeUtilizadores((Utilizadores) null);
      // Undeclared exception!
      try { 
        estado0.existeEmail("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.Estado", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Estado estado0 = new Estado();
      // Undeclared exception!
      try { 
        estado0.carregaEstado((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Estado estado0 = new Estado();
      estado0.escreverLog("logs/logs.txt");
      try { 
        estado0.carregaEstado("logs/logs.txt");
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 6C6F6773
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Estado estado0 = new Estado();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("}:Ya@Up+:Sdz!}");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      try { 
        estado0.carregaEstado("}:Ya@Up+:Sdz!}");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Estado estado0 = new Estado();
      // Undeclared exception!
      try { 
        estado0.addUtilizador((Utilizador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.utilizador.Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Estado estado0 = null;
      try {
        estado0 = new Estado((Estado) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.Estado", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Estado estado0 = new Estado();
      Utilizador utilizador0 = estado0.getUtilizadorByEmail("`=82;Hc");
      assertNull(utilizador0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Estado estado0 = new Estado();
      // Undeclared exception!
      try { 
        estado0.escreverLog((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Estado estado0 = new Estado();
      estado0.escreverLog("OfzzI8^pz;/");
      estado0.escreverLog("");
      assertEquals(1, estado0.getNewUserCode());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Estado estado0 = new Estado();
      boolean boolean0 = estado0.login((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Estado estado0 = new Estado();
      Estado estado1 = new Estado(estado0);
      assertFalse(estado1.equals((Object)estado0));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Estado estado0 = new Estado();
      TipoUtilizador tipoUtilizador0 = TipoUtilizador.PRATICANTE_OCASIONAL;
      Utilizador utilizador0 = new Utilizador("", "Bg", "", 1387.44373, tipoUtilizador0);
      List<PlanoDeTreino> list0 = utilizador0.getPlanosDeTreino();
      LinkedList<Atividade> linkedList0 = new LinkedList<Atividade>();
      Utilizador utilizador1 = new Utilizador("logs/logs.txt", "PRATICANTE_OCASIONAL", "logs/logs.txt", 0.0, tipoUtilizador0, list0, linkedList0);
      estado0.addUtilizador(utilizador1);
      estado0.login("logs/logs.txt");
      Utilizador utilizador2 = estado0.getUserLogged();
      assertEquals("PRATICANTE_OCASIONAL", utilizador2.getMorada());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Estado estado0 = new Estado();
      try { 
        estado0.carregaEstado("logs/logs.txt");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Estado estado0 = new Estado();
      LocalDate localDate0 = estado0.getTempoAtual();
      assertNotNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Estado estado0 = new Estado();
      Utilizador utilizador0 = estado0.getUserLogged();
      assertNull(utilizador0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Estado estado0 = new Estado();
      Utilizadores utilizadores0 = estado0.getListaDeUtilizadores();
      estado0.setListaDeUtilizadores(utilizadores0);
      assertEquals(1, estado0.getNewUserCode());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Estado estado0 = new Estado();
      try { 
        estado0.guardarEstado("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Estado estado0 = new Estado();
      // Undeclared exception!
      try { 
        estado0.getUserNameByKey("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.utilizador.Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Estado estado0 = new Estado();
      int int0 = estado0.getNewUserCode();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Estado estado0 = new Estado();
      boolean boolean0 = estado0.existeEmail("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Estado estado0 = new Estado();
      // Undeclared exception!
      try { 
        estado0.addUtilizador("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.myapplication.projetopoo2324.utilizador.Utilizadores", e);
      }
  }
}
